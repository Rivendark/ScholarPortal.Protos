// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/queryusers.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ScholarPortal.Protos.Users {
  public static partial class QueryUsersService
  {
    static readonly string __ServiceName = "QueryUsers.QueryUsersService";

    static readonly grpc::Marshaller<global::ScholarPortal.Protos.Users.UserRequest> __Marshaller_QueryUsers_UserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ScholarPortal.Protos.Users.UserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ScholarPortal.Protos.Users.UserValidModel> __Marshaller_QueryUsers_UserValidModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ScholarPortal.Protos.Users.UserValidModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ScholarPortal.Protos.Users.UserModel> __Marshaller_QueryUsers_UserModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ScholarPortal.Protos.Users.UserModel.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ScholarPortal.Protos.Users.UsersRequest> __Marshaller_QueryUsers_UsersRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ScholarPortal.Protos.Users.UsersRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ScholarPortal.Protos.Users.UsersModel> __Marshaller_QueryUsers_UsersModel = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ScholarPortal.Protos.Users.UsersModel.Parser.ParseFrom);

    static readonly grpc::Method<global::ScholarPortal.Protos.Users.UserRequest, global::ScholarPortal.Protos.Users.UserValidModel> __Method_IsValidUser = new grpc::Method<global::ScholarPortal.Protos.Users.UserRequest, global::ScholarPortal.Protos.Users.UserValidModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsValidUser",
        __Marshaller_QueryUsers_UserRequest,
        __Marshaller_QueryUsers_UserValidModel);

    static readonly grpc::Method<global::ScholarPortal.Protos.Users.UserRequest, global::ScholarPortal.Protos.Users.UserModel> __Method_GetUser = new grpc::Method<global::ScholarPortal.Protos.Users.UserRequest, global::ScholarPortal.Protos.Users.UserModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUser",
        __Marshaller_QueryUsers_UserRequest,
        __Marshaller_QueryUsers_UserModel);

    static readonly grpc::Method<global::ScholarPortal.Protos.Users.UsersRequest, global::ScholarPortal.Protos.Users.UsersModel> __Method_GetUsers = new grpc::Method<global::ScholarPortal.Protos.Users.UsersRequest, global::ScholarPortal.Protos.Users.UsersModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsers",
        __Marshaller_QueryUsers_UsersRequest,
        __Marshaller_QueryUsers_UsersModel);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ScholarPortal.Protos.Users.QueryusersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of QueryUsersService</summary>
    [grpc::BindServiceMethod(typeof(QueryUsersService), "BindService")]
    public abstract partial class QueryUsersServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::ScholarPortal.Protos.Users.UserValidModel> IsValidUser(global::ScholarPortal.Protos.Users.UserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ScholarPortal.Protos.Users.UserModel> GetUser(global::ScholarPortal.Protos.Users.UserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ScholarPortal.Protos.Users.UsersModel> GetUsers(global::ScholarPortal.Protos.Users.UsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for QueryUsersService</summary>
    public partial class QueryUsersServiceClient : grpc::ClientBase<QueryUsersServiceClient>
    {
      /// <summary>Creates a new client for QueryUsersService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public QueryUsersServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for QueryUsersService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public QueryUsersServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected QueryUsersServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected QueryUsersServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::ScholarPortal.Protos.Users.UserValidModel IsValidUser(global::ScholarPortal.Protos.Users.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsValidUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ScholarPortal.Protos.Users.UserValidModel IsValidUser(global::ScholarPortal.Protos.Users.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsValidUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::ScholarPortal.Protos.Users.UserValidModel> IsValidUserAsync(global::ScholarPortal.Protos.Users.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsValidUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::ScholarPortal.Protos.Users.UserValidModel> IsValidUserAsync(global::ScholarPortal.Protos.Users.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsValidUser, null, options, request);
      }
      public virtual global::ScholarPortal.Protos.Users.UserModel GetUser(global::ScholarPortal.Protos.Users.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ScholarPortal.Protos.Users.UserModel GetUser(global::ScholarPortal.Protos.Users.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::ScholarPortal.Protos.Users.UserModel> GetUserAsync(global::ScholarPortal.Protos.Users.UserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::ScholarPortal.Protos.Users.UserModel> GetUserAsync(global::ScholarPortal.Protos.Users.UserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUser, null, options, request);
      }
      public virtual global::ScholarPortal.Protos.Users.UsersModel GetUsers(global::ScholarPortal.Protos.Users.UsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ScholarPortal.Protos.Users.UsersModel GetUsers(global::ScholarPortal.Protos.Users.UsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsers, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::ScholarPortal.Protos.Users.UsersModel> GetUsersAsync(global::ScholarPortal.Protos.Users.UsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::ScholarPortal.Protos.Users.UsersModel> GetUsersAsync(global::ScholarPortal.Protos.Users.UsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsers, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override QueryUsersServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryUsersServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(QueryUsersServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_IsValidUser, serviceImpl.IsValidUser)
          .AddMethod(__Method_GetUser, serviceImpl.GetUser)
          .AddMethod(__Method_GetUsers, serviceImpl.GetUsers).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, QueryUsersServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_IsValidUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ScholarPortal.Protos.Users.UserRequest, global::ScholarPortal.Protos.Users.UserValidModel>(serviceImpl.IsValidUser));
      serviceBinder.AddMethod(__Method_GetUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ScholarPortal.Protos.Users.UserRequest, global::ScholarPortal.Protos.Users.UserModel>(serviceImpl.GetUser));
      serviceBinder.AddMethod(__Method_GetUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ScholarPortal.Protos.Users.UsersRequest, global::ScholarPortal.Protos.Users.UsersModel>(serviceImpl.GetUsers));
    }

  }
}
#endregion
